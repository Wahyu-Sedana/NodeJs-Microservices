version: "3.8"
services:
  api:
    container_name: api
    build:
      context: .
    environment:
      PORT: ${PORT}  # Port yang diambil dari .env
      DB_HOST: db  # Nama layanan database dalam Docker Compose
      DB_USER: ${DB_USER}  # User yang diambil dari .env
      DB_PASS: ${DB_PASS}  # Password yang diambil dari .env
      DB_DATABASE: ${DB_DATABASE}  # Nama database yang diambil dari .env
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - db

  db:
    container_name: db
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}  # Password root MySQL dari .env
      MYSQL_DATABASE: ${DB_DATABASE}  # Nama database yang diambil dari .env
      MYSQL_USER: ${DB_USER}  # User yang diambil dari .env
      MYSQL_PASSWORD: ${DB_PASS}  # Password yang diambil dari .env
    volumes:
      - "./src/utils/akuntansi.sql:/docker-entrypoint-initdb.d/akuntansi.sql"

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    ports:
      - "${PMA_PORT}:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}  # Password root MySQL dari .env

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - "./server:/etc/nginx/conf.d/default"
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - api
